.site-inner {
	padding: 0 $grid-padding-gutters / 2;
	overflow: hidden;

	> .grid-container {
		padding: {
			top: $grid-padding-gutters;
			bottom: $grid-padding-gutters;
		}
	}
}

.entry-content > .alignfull > .grid-container {
	$grid-padding-x: map-get($grid-container-padding, "small");
	padding: {
		left: $grid-padding-gutters / 2 + rem-calc( $grid-padding-x ) / 2;
		right: $grid-padding-gutters / 2 + rem-calc( $grid-padding-x ) / 2;
	}
}

@include breakpoint(medium) {
	.entry-content > .alignfull > .grid-container {
		$grid-padding-x: map-get($grid-container-padding, "medium");
		padding: {
			left: $grid-padding-gutters / 2 + rem-calc( $grid-padding-x ) / 2;
			right: $grid-padding-gutters / 2 + rem-calc( $grid-padding-x ) / 2;
		}
	}

	.layout-container {
		@include xy-grid-container($break-xlarge, 0);
	}

	.site-inner {
		padding: 0;

		> .grid-container:not(.full) {
			padding: {
				left: $grid-padding-gutters;
				right: $grid-padding-gutters;
			}
		}
	}

	/* Ensure footer is always at the bottom of the window but not overlapping content. */
	.site-container {
		display: flex;
		flex-direction: column;
		height: 100vh;

		.logged-in & {
			height: calc(100vh - 32px);
		}
	}

	.site-header,
	.site-footer {
		flex-shrink: 0;
	}

	.site-inner {
		flex: 1 0 auto;
	}
	/* End */
}

/* Add nowrap class for xy-grid. */
.grid-x.grid-nowrap {
	flex-wrap: nowrap;
}

/* Flexbox order classes. */
@include breakpoint(small only) {
	.small-order {
		&-1 {
			order: 1;
		}

		&-2 {
			order: 2;
		}

		&-3 {
			order: 3;
		}

		&-4 {
			order: 4;
		}

		&-5 {
			order: 5;
		}
	}
}
